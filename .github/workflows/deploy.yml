name: Deploy Red Legion Website

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy PHP Website to GCP

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy website files
      run: |
        # Create deployment directory on server
        gcloud compute ssh ubuntu@arccorp-web-server --zone us-central1-a --command "
          sudo mkdir -p /tmp/red-legion-website-deploy
          sudo chown ubuntu:ubuntu /tmp/red-legion-website-deploy
        "

        # Copy website files to server
        gcloud compute scp --recurse . ubuntu@arccorp-web-server:/tmp/red-legion-website-deploy/ --zone us-central1-a

        # Deploy and configure on server using pure shell commands
        gcloud compute ssh ubuntu@arccorp-web-server --zone us-central1-a --command "
          # Create website directory
          sudo mkdir -p /opt/red-legion-website

          # Backup existing files if they exist
          if [ -d '/opt/red-legion-website/public_html' ]; then
            sudo rm -rf /opt/red-legion-website/backup || true
            sudo mkdir -p /opt/red-legion-website/backup
            sudo cp -r /opt/red-legion-website/* /opt/red-legion-website/backup/ 2>/dev/null || true
          fi

          # Copy new files
          sudo rm -rf /opt/red-legion-website/app /opt/red-legion-website/public_html || true
          sudo cp -r /tmp/red-legion-website-deploy/app /opt/red-legion-website/
          sudo cp -r /tmp/red-legion-website-deploy/public_html /opt/red-legion-website/
          sudo cp /tmp/red-legion-website-deploy/composer.json /opt/red-legion-website/ 2>/dev/null || true
          sudo chown -R www-data:www-data /opt/red-legion-website

          # Install dependencies
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt update
          sudo apt install -y php8.1 php8.1-fpm php8.1-mysql php8.1-curl php8.1-gd php8.1-xml php8.1-mbstring php8.1-zip mysql-server composer nginx phpmyadmin

          # Configure services
          sudo systemctl enable php8.1-fpm nginx mysql
          sudo systemctl start php8.1-fpm nginx mysql

          # Create swap if not exists
          if ! swapon --show | grep -q swap; then
            sudo fallocate -l 1G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
            echo 'vm.swappiness=10' | sudo tee -a /etc/sysctl.conf
          fi

          # Configure MySQL for low memory
          sudo tee /etc/mysql/conf.d/low-memory.cnf > /dev/null <<'MYSQL_EOF'
[mysqld]
innodb_buffer_pool_size = 32M
innodb_log_file_size = 8M
innodb_log_buffer_size = 2M
key_buffer_size = 8M
max_connections = 20
table_open_cache = 32
sort_buffer_size = 128K
read_buffer_size = 128K
read_rnd_buffer_size = 128K
myisam_sort_buffer_size = 4M
thread_cache_size = 4
query_cache_size = 8M
query_cache_type = 1
performance_schema = OFF
bind-address = 127.0.0.1
skip-name-resolve
MYSQL_EOF

          sudo systemctl restart mysql

          # Set up database
          mysql -u root <<'SQL_EOF'
CREATE DATABASE IF NOT EXISTS red_legion_website;
CREATE USER IF NOT EXISTS 'website_user'@'localhost' IDENTIFIED BY 'temp_password_to_be_changed';
GRANT ALL PRIVILEGES ON red_legion_website.* TO 'website_user'@'localhost';
CREATE USER IF NOT EXISTS 'admin'@'localhost' IDENTIFIED BY 'RedLegion2024!';
GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' WITH GRANT OPTION;
FLUSH PRIVILEGES;
SQL_EOF

          # Install Composer dependencies
          if [ -f '/opt/red-legion-website/composer.json' ]; then
            cd /opt/red-legion-website
            sudo -u www-data composer install --no-dev --optimize-autoloader
          fi

          # Create .env file
          sudo tee /opt/red-legion-website/.env > /dev/null <<'ENV_EOF'
APP_ENV=production
APP_NAME=The Red Legion
APP_TZ=UTC
DB_HOST=localhost
DB_PORT=3306
DB_NAME=red_legion_website
DB_USER=website_user
DB_PASS=temp_password_to_be_changed
ENV_EOF

          sudo chown www-data:www-data /opt/red-legion-website/.env
          sudo chmod 640 /opt/red-legion-website/.env

          # Configure Nginx
          sudo tee /etc/nginx/sites-available/red-legion > /dev/null <<'NGINX_EOF'
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name dev.redlegion.gg;
    root /opt/red-legion-website/public_html;
    index index.php index.html;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection \"1; mode=block\";

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~ \\.php\$ {
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }

    location /phpmyadmin {
        alias /usr/share/phpmyadmin;
        index index.php;

        location ~ ^/phpmyadmin/(.+\\.php)\$ {
            alias /usr/share/phpmyadmin/\$1;
            fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME \$request_filename;
            include fastcgi_params;
        }
    }

    location /management/ {
        proxy_pass http://127.0.0.1:8000/;
        proxy_http_version 1.1;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /management/static/ {
        alias /opt/red-legion-management-portal/static/;
        expires 1y;
        add_header Cache-Control \"public, immutable\";
    }

    location /management/assets/ {
        alias /opt/red-legion-management-portal/frontend/dist/assets/;
        expires 1y;
        add_header Cache-Control \"public, immutable\";
    }

    location ~* \\.(env|git|svn)\$ {
        deny all;
        return 404;
    }
}
NGINX_EOF

          # Enable site
          sudo rm -f /etc/nginx/sites-enabled/default /etc/nginx/sites-enabled/red-legion
          sudo ln -sf /etc/nginx/sites-available/red-legion /etc/nginx/sites-enabled/

          # Test and reload nginx
          sudo nginx -t
          sudo systemctl reload nginx

          # Show status
          echo '=== Deployment Status ==='
          free -h
          echo ''
          echo 'Swap:'
          swapon --show
          echo ''
          echo 'Services:'
          systemctl is-active nginx php8.1-fpm mysql
          echo ''
          echo 'Access URLs:'
          echo 'Main site: http://dev.redlegion.gg/'
          echo 'phpMyAdmin: http://dev.redlegion.gg/phpmyadmin'
          echo 'Management: http://dev.redlegion.gg/management/'
          echo ''
          echo 'Database: red_legion_website'
          echo 'Admin: admin / RedLegion2024!'

          # Clean up
          rm -rf /tmp/red-legion-website-deploy
        "

    - name: Verify deployment
      run: |
        echo "PHP Website deployment completed!"
        echo "Main site: http://dev.redlegion.gg/"
        echo "Management portal: http://dev.redlegion.gg/management/"