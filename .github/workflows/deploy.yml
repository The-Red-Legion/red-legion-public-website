name: Deploy Red Legion Website

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy PHP Website to GCP

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Copy deployment files to server
      run: |
        # Copy entire repository to server
        gcloud compute scp --recurse . ubuntu@arccorp-web-server:/tmp/red-legion-website-deploy/ --zone us-central1-a

    - name: Deploy with Ansible via gcloud ssh
      run: |
        gcloud compute ssh ubuntu@arccorp-web-server --zone us-central1-a --command "
          cd /tmp/red-legion-website-deploy

          # Install Ansible on the server if not present
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible

          # Run Ansible playbook locally on the server
          cd ansible
          ansible-playbook -i inventory.ini deploy.yml \
            -e 'db_host=${{ secrets.DB_HOST }}' \
            -e 'db_port=${{ secrets.DB_PORT }}' \
            -e 'db_name=${{ secrets.DB_NAME }}' \
            -e 'db_user=${{ secrets.DB_USER }}' \
            -e 'db_pass=${{ secrets.DB_PASS }}' \
            --connection=local \
            --inventory=localhost, \
            --limit=localhost

          # Clean up
          rm -rf /tmp/red-legion-website-deploy
        "

    - name: Verify deployment
      run: |
        echo "PHP Website deployment completed!"
        echo "Main site: http://dev.redlegion.gg/"
        echo "Management portal: http://dev.redlegion.gg/management/"