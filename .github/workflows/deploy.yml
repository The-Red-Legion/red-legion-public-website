name: Deploy Red Legion Website

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy PHP Website to GCP

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy with optimized gcloud approach
      run: |
        # Copy entire project to server
        echo "Copying files to server..."
        gcloud compute scp --recurse . ubuntu@arccorp-web-server:/tmp/red-legion-website-deploy/ --zone us-central1-a

        # Run deployment via gcloud ssh
        echo "Running deployment..."
        gcloud compute ssh ubuntu@arccorp-web-server --zone us-central1-a --command "
          cd /tmp/red-legion-website-deploy

          # Install Ansible if not present
          if ! command -v ansible-playbook &> /dev/null; then
            echo 'Installing Ansible...'
            sudo apt update -qq
            sudo apt install -y python3-pip python3-venv
            python3 -m pip install ansible
          else
            echo 'Ansible already installed'
          fi

          # Set default database variables (will be configured later)
          export DB_HOST='localhost'
          export DB_PORT='3306'
          export DB_NAME='red_legion_website'
          export DB_USER='website_user'
          export DB_PASS='temp_password_to_be_changed'

          echo 'Running Ansible playbook...'
          # Run Ansible playbook locally on the server
          cd ansible
          ansible-playbook -i localhost, deploy.yml \
            --connection=local \
            -e \"db_host=\$DB_HOST\" \
            -e \"db_port=\$DB_PORT\" \
            -e \"db_name=\$DB_NAME\" \
            -e \"db_user=\$DB_USER\" \
            -e \"db_pass=\$DB_PASS\" \
            -v

          # Clean up
          echo 'Cleaning up...'
          rm -rf /tmp/red-legion-website-deploy
          echo 'Deployment completed successfully'
        "

    - name: Verify deployment
      run: |
        echo "PHP Website deployment completed!"
        echo "Main site: http://dev.redlegion.gg/"
        echo "Management portal: http://dev.redlegion.gg/management/"