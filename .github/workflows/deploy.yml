name: Deploy Red Legion Website

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy PHP Website to GCP

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Setup gcloud SSH key for Ansible
      run: |
        # Generate SSH key if it doesn't exist
        if [ ! -f ~/.ssh/google_compute_engine ]; then
          ssh-keygen -t rsa -f ~/.ssh/google_compute_engine -N '' -C "github-actions"
        fi

        # Add the public key to the VM metadata
        gcloud compute project-info add-metadata \
          --metadata-from-file ssh-keys=<(gcloud compute project-info describe --format="value(commonInstanceMetadata.items[ssh-keys].value)" ; echo "github-actions:$(cat ~/.ssh/google_compute_engine.pub)")

    - name: Deploy with Ansible
      run: |
        cd ansible

        # Create temporary inventory with gcloud SSH config
        cat > inventory-gcloud.ini << EOF
        [web_servers]
        arccorp-web-server ansible_host=34.28.1.154 ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/google_compute_engine

        [web_servers:vars]
        ansible_python_interpreter=/usr/bin/python3
        ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
        EOF

        # Run Ansible playbook
        ansible-playbook -i inventory-gcloud.ini deploy.yml \
          -e "db_host=${{ secrets.DB_HOST }}" \
          -e "db_port=${{ secrets.DB_PORT }}" \
          -e "db_name=${{ secrets.DB_NAME }}" \
          -e "db_user=${{ secrets.DB_USER }}" \
          -e "db_pass=${{ secrets.DB_PASS }}" \
          -v

    - name: Verify deployment
      run: |
        echo "PHP Website deployment completed!"
        echo "Main site: http://dev.redlegion.gg/"
        echo "Management portal: http://dev.redlegion.gg/management/"